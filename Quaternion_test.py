# -*- coding: utf-8 -*-
"""
Created on Wed Dec  5 09:56:28 2018

test on quaternion

@author: JingQIN
"""

import matplotlib.pyplot as plt
from Quaternion import Quaternion
import functions as f
import numpy as np

print("-------test on addition operation-------")
A = Quaternion(-1.0, 2.0, 3.0, 4.0)
B = Quaternion(5.0, 6.0, 7.0, 8.0)
C = A + B
print(A)
print(B)
print(C)
print("-------test on subtraction operation-------")
E = Quaternion(1.0, 2.0, 3.0, 4.0)
F = Quaternion(-2.0, 6.0, 7.0, 8.0)
G = E - F
print(E)
print(F)
print(G)
print("-------test on dot production-------")
E = Quaternion(1.0, 2.0, 3.0, 4.0)
F = Quaternion(-2.0, 6.0, 7.0, 8.0)
G = E.dot(F)
print(E)
print(F)
print(G)
print("-------test on multiply-------")
E = Quaternion(1.0, 2.0, 3.0, 4.0)
F = Quaternion(-2.0, 6.0, 7.0, 8.0)
G = E*F
print(E)
print(F)
print(G)
print("-------test on scalar multiply-------")
E = Quaternion(1.0, 2.0, 3.0, 4.0)
F = 100
G = E.scalar_mul(F)
print(E)
print(F)
print(G)
print("-------test on norm-------")
E = Quaternion(1.0, 2.0, 3.0, 4.0)
print(E.norm())
print("-------test on conjugate-------")
E = Quaternion(1.0, 2.0, 3.0, 4.0)
print(E.conj())
print("-------test on Quaternion to DCM-------")
E = Quaternion(0.0, 1.0, 1.0, 1.0)
D = E.toDCM()
print(D)
print("-------test on DCM to Quaternion-------")
print(f.DCMtoQuaternion(D))
#print("-------test on rotation precision------")
#(X1, X2, MEANDIFF, MINDIFF, MAXDIFF) = f.Quaternion_rotation_precision(30, 100, np.pi, np.pi, np.pi)
#fig, ax = plt.subplots()
#ax.semilogy(X1, MEANDIFF, 'k--', label='Mean', color = 'red')
#ax.semilogy(X1, MINDIFF, 'k:', label='MIN', color = 'green')
#ax.semilogy(X1, MAXDIFF, 'k', label='MAX', color = 'blue')
#ax.set_xlabel("Times")
#ax.set_ylabel("Differences")
#ax.set_title("Differences in 100 steps, 30 rounds")
#legend = ax.legend(loc=2, bbox_to_anchor=(1.05,1.0),borderaxespad = 0.)
#legend.get_frame().set_facecolor('C0')
#plt.show()
#fig.set_size_inches(18.5, 10.5)
#fig.savefig('test_Quaternion_100_test.png', dpi = 100)
#print("-------test on DCM rotation-------")
#(X1, X2, MEANDIFF, MINDIFF, MAXDIFF) = f.DCM_rotation_precision(30, 100, np.pi, np.pi, np.pi)
#fig, ax = plt.subplots()
#ax.semilogy(X1, MEANDIFF, 'k--', label='Mean', color = 'red')
#ax.semilogy(X1, MINDIFF, 'k:', label='MIN', color = 'green')
#ax.semilogy(X1, MAXDIFF, 'k', label='MAX', color = 'blue')
#ax.set_xlabel("Times")
#ax.set_ylabel("Differences")
#ax.set_title("Differences in 100 steps, 30 rounds")
#legend = ax.legend(loc = 2, bbox_to_anchor = (1.05, 1.0), borderaxespad = 0.)
#legend.get_frame().set_facecolor('C0')
#plt.show()
#fig.set_size_inches(18.5, 10.5)
#fig.savefig('test_DCM_100_test.png', dpi = 100)
#print("-------compare output differences in Quaternion and DCM-------")
#(X1, X2, MEANDIFF_Q, MINDIFF_Q, MAXDIFF_Q, MEANDIFF_DCM, MINDIFF_Q, MAXDIFF_Q) = f.Quaternion_DCM_precision(30, 100, np.pi, np.pi, np.pi)
#fig, ax = plt.subplots()
#ax.semilogy(X1, MEANDIFF_Q, 'k--', label='Mean_Quaternion', color = 'red')
#ax.semilogy(X1, MEANDIFF_DCM, 'k--', label='Mean_DCM', color = 'green')
#ax.set_xlabel("Times")
#ax.set_ylabel("Differences")
#ax.set_title("Differences between DCM and Quaternion in 100 steps, 30 rounds")
#legend = ax.legend(loc = 2, bbox_to_anchor = (1.05, 1.0), borderaxespad = 0.)
#legend.get_frame().set_facecolor('C0')
#plt.show()
#fig.set_size_inches(18.5, 10.5)
#fig.savefig('test_DCM_Quaternion_100_test.png', dpi = 100)
#print("-------Quaternion, DCM in 300 rounds, 100 steps-------")
#(X1, X2, MEANDIFF, MINDIFF, MAXDIFF) = f.Quaternion_rotation_precision(300, 100, np.pi, np.pi, np.pi)
#fig, ax = plt.subplots()
#ax.loglog(X1, MEANDIFF, 'k--', label='Mean', color = 'red')
#ax.loglog(X1, MINDIFF, 'k:', label='MIN', color = 'green')
#ax.loglog(X1, MAXDIFF, 'k', label='MAX', color = 'blue')
#ax.set_xlabel("Times")
#ax.set_ylabel("Differences")
#ax.set_title("Differences in 100 steps, 300 rounds, loglog_plot")
#legend = ax.legend(loc=2, bbox_to_anchor=(1.05,1.0),borderaxespad = 0.)
#legend.get_frame().set_facecolor('C0')
#plt.show()
#fig.set_size_inches(18.5, 10.5)
#fig.savefig('test_Quaternion_100_300_loglog.png', dpi = 100)
#
#(X1, X2, MEANDIFF, MINDIFF, MAXDIFF) = f.DCM_rotation_precision(300, 100, np.pi, np.pi, np.pi)
#fig, ax = plt.subplots()
#ax.loglog(X1, MEANDIFF, 'k--', label='Mean', color = 'red')
#ax.loglog(X1, MINDIFF, 'k:', label='MIN', color = 'green')
#ax.loglog(X1, MAXDIFF, 'k', label='MAX', color = 'blue')
#ax.set_xlabel("Times")
#ax.set_ylabel("Differences")
#ax.set_title("Differences in 100 steps, 300 rounds, loglog_plot")
#legend = ax.legend(loc=2, bbox_to_anchor=(1.05,1.0),borderaxespad = 0.)
#legend.get_frame().set_facecolor('C0')
#plt.show()
#fig.set_size_inches(18.5, 10.5)
#fig.savefig('test_DCM_100_300_loglog.png', dpi = 100)
#
#(X1, X2, MEANDIFF_Q, MINDIFF_Q, MAXDIFF_Q, MEANDIFF_DCM, MINDIFF_Q, MAXDIFF_Q) = f.Quaternion_DCM_precision(300, 100, np.pi, np.pi, np.pi)
#fig, ax = plt.subplots()
#ax.loglog(X1, MEANDIFF_Q, 'k--', label='Mean_Quaternion', color = 'red')
#ax.loglog(X1, MEANDIFF_DCM, 'k--', label='Mean_DCM', color = 'green')
#ax.set_xlabel("Times")
#ax.set_ylabel("Differences")
#ax.set_title("Differences between DCM and Quaternion in 100 steps, 300 rounds, loglog_plot")
#legend = ax.legend(loc = 2, bbox_to_anchor = (1.05, 1.0), borderaxespad = 0.)
#legend.get_frame().set_facecolor('C0')
#plt.show()
#fig.set_size_inches(18.5, 10.5)
#fig.savefig('test_DCM_Quaternion_100_300_loglog.png', dpi = 100)


